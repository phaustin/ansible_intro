version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --api.dashboard=true
    ports:
      - "80:80"
      - "8080:8080"      # The HTTP port
            # The Web UI (enabled by --api.insecure=true)
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

# ...
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`{{ book_domain }}`)"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"
      
traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    environment:
        PROVIDERS_GENERIC_OAUTH_CLIENT_ID: "{{ vault_a301_github_client_id }}"
        PROVIDERS_GENERIC_OAUTH_CLIENT_SECRET: "{{ vault_a301_github_client_secret }}"
        SECRET: "{{ vault_a301_github_cookie_secret }}"
      - INSECURE_COOKIE: "true" # Example assumes no https, do not use in production
    labels:
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"
